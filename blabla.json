checkServerIdentity: [Function: checkServerIdentity],
minDHSize: 1024,
method: 'POST',
port: 443,
path: null,
host: 'us17.api.mailchimp.com',
ca: undefined,
key: undefined,
pfx: undefined,
cert: undefined,
passphrase: undefined,
agent: false,
_defaultAgent: [Agent],
servername: 'us17.api.mailchimp.com',
_agentKey: 'us17.api.mailchimp.com:443:::::::::::::::::::::',
encoding: null,
singleUse: true
},
[Symbol(RequestTimeout)]: undefined
},
_consuming: false,
_dumped: false,
req: <ref *3> ClientRequest {
_events: [Object: null prototype] {
drain: [Function],
error: [Function],
prefinish: [Function: requestOnPrefinish]
},
_eventsCount: 3,
_maxListeners: undefined,
outputData: [],
outputSize: 0,
writable: true,
destroyed: true,
_last: true,
chunkedEncoding: false,
shouldKeepAlive: false,
maxRequestsOnConnectionReached: false,
_defaultKeepAlive: true,
useChunkedEncodingByDefault: true,
sendDate: false,
_removedConnection: false,
_removedContLen: false,
_removedTE: false,
_contentLength: 105,
_hasBody: true,
_trailer: '',
finished: true,
_headerSent: true,
_closed: true,
socket: <ref *1> TLSSocket {
_tlsOptions: [Object],
_secureEstablished: true,
_securePending: false,
_newSessionPending: false,
_controlReleased: true,
secureConnecting: false,
_SNICallback: null,
servername: 'us17.api.mailchimp.com',
alpnProtocol: false,
authorized: true,
authorizationError: null,
encrypted: true,
_events: [Object: null prototype],
_eventsCount: 9,
connecting: false,
_hadError: false,
_parent: null,
_host: 'us17.api.mailchimp.com',
_readableState: [ReadableState],
_maxListeners: undefined,
_writableState: [WritableState],
allowHalfOpen: false,
_sockname: null,
_pendingData: null,
_pendingEncoding: '',
server: undefined,
_server: null,
ssl: null,
_requestCert: true,
_rejectUnauthorized: true,
parser: null,
_httpMessage: [Circular *3],
write: [Function: writeAfterFIN],
[Symbol(res)]: null,
[Symbol(verified)]: true,
[Symbol(pendingSession)]: null,
[Symbol(async_id_symbol)]: 62,
[Symbol(kHandle)]: null,
[Symbol(lastWriteQueueSize)]: 0,
[Symbol(timeout)]: null,
[Symbol(kBuffer)]: null,
[Symbol(kBufferCb)]: null,
[Symbol(kBufferGen)]: null,
[Symbol(kCapture)]: false,
[Symbol(kSetNoDelay)]: true,
[Symbol(kSetKeepAlive)]: false,
[Symbol(kSetKeepAliveInitialDelay)]: 0,
[Symbol(kBytesRead)]: 554,
[Symbol(kBytesWritten)]: 426,
[Symbol(connect-options)]: [Object],
[Symbol(RequestTimeout)]: undefined
},
_header: 'POST /3.0/lists/3cf661bc52/members HTTP/1.1\r\n' +
'Host: us17.api.mailchimp.com\r\n' +
'Accept-Encoding: gzip, deflate\r\n' +
'User-Agent: node-superagent/3.8.1\r\n' +
'Authorization: Basic dXNlcjoxOTMzNzFiNTc5MGNlZWE2NGIxODk0OGFkYzQ0M2ZlYi11czE3\r\n' +
'Content-Type: application/json\r\n' +
'Accept: application/json\r\n' +
'Content-Length: 105\r\n' +
'Connection: close\r\n' +
'\r\n',
_keepAliveTimeout: 0,
_onPendingData: [Function: nop],
agent: Agent {
_events: [Object: null prototype],
_eventsCount: 2,
_maxListeners: undefined,
defaultPort: 443,
protocol: 'https:',
options: [Object: null prototype],
requests: [Object: null prototype] {},
sockets: [Object: null prototype] {},
freeSockets: [Object: null prototype] {},
keepAliveMsecs: 1000,
keepAlive: false,
maxSockets: Infinity,
maxFreeSockets: 256,
scheduling: 'lifo',
maxTotalSockets: Infinity,
totalSocketCount: 0,
maxCachedSessions: 100,
_sessionCache: [Object],
[Symbol(kCapture)]: false
},
socketPath: undefined,
method: 'POST',
maxHeaderSize: undefined,
insecureHTTPParser: undefined,
path: '/3.0/lists/3cf661bc52/members',
_ended: true,
res: [Circular *2],
aborted: false,
timeoutCb: null,
upgradeOrConnect: false,
parser: null,
maxHeadersCount: null,
reusedSocket: false,
host: 'us17.api.mailchimp.com',
protocol: 'https:',
[Symbol(kCapture)]: false,
[Symbol(kNeedDrain)]: false,
[Symbol(corked)]: 0,
[Symbol(kOutHeaders)]: [Object: null prototype] {
host: [Array],
'accept-encoding': [Array],
'user-agent': [Array],
authorization: [Array],
'content-type': [Array],
accept: [Array],
'content-length': [Array]
}
},
setEncoding: [Function (anonymous)],
on: [Function (anonymous)],
text: '{"title":"Member Exists","status":400,"detail":"123@email.com is already a list member. Use PUT to insert or update list members.","instance":"467e6b59-4147-c76f-83cb-5ae85cf768d0"}',
[Symbol(kCapture)]: false,
[Symbol(kHeaders)]: {
server: 'openresty',
'content-type': 'application/problem+json; charset=utf-8',
'content-length': '167',
'x-request-id': '467e6b59-4147-c76f-83cb-5ae85cf768d0',
link: '<https://us17.api.mailchimp.com/schema/3.0/Definitions/ProblemDetailDocument.json>; rel="describedBy"',
'content-encoding': 'gzip',
vary: 'Accept-Encoding',
date: 'Fri, 19 Aug 2022 08:07:32 GMT',
connection: 'close'
},
[Symbol(kHeadersCount)]: 18,
[Symbol(kTrailers)]: null,
[Symbol(kTrailersCount)]: 0,
[Symbol(RequestTimeout)]: undefined
},
response: [Circular *4],
called: true,
[Symbol(kCapture)]: false
},
req: <ref *3> ClientRequest {
_events: [Object: null prototype] {
drain: [Function: bound onceWrapper] {
listener: [Function (anonymous)]
},
error: [Function: bound onceWrapper] {
listener: [Function (anonymous)]
},
prefinish: [Function: requestOnPrefinish]
},
_eventsCount: 3,
_maxListeners: undefined,
outputData: [],
outputSize: 0,
writable: true,
destroyed: true,
_last: true,
chunkedEncoding: false,
shouldKeepAlive: false,
maxRequestsOnConnectionReached: false,
_defaultKeepAlive: true,
useChunkedEncodingByDefault: true,
sendDate: false,
_removedConnection: false,
_removedContLen: false,
_removedTE: false,
_contentLength: 105,
_hasBody: true,
_trailer: '',
finished: true,
_headerSent: true,
_closed: true,
socket: <ref *1> TLSSocket {
_tlsOptions: {
allowHalfOpen: undefined,
pipe: false,
secureContext: SecureContext { context: SecureContext {} },
isServer: false,
requestCert: true,
rejectUnauthorized: true,
session: undefined,
ALPNProtocols: undefined,
requestOCSP: undefined,
enableTrace: undefined,
pskCallback: undefined,
highWaterMark: undefined,
onread: undefined,
signal: undefined
},
_secureEstablished: true,
_securePending: false,
_newSessionPending: false,
_controlReleased: true,
secureConnecting: false,
_SNICallback: null,
servername: 'us17.api.mailchimp.com',
alpnProtocol: false,
authorized: true,
authorizationError: null,
encrypted: true,
_events: [Object: null prototype] {
close: [
[Function: onSocketCloseDestroySSL],
[Function: onClose],
[Function: socketCloseListener]
],
end: [Function: onReadableStreamEnd],
newListener: [Function: keylogNewListener],
secure: [Function: onConnectSecure],
session: [Function (anonymous)],
free: [Function: onFree],
timeout: [Function: onTimeout],
agentRemove: [Function: onRemove],
error: [Function: socketErrorListener]
},
_eventsCount: 9,
connecting: false,
_hadError: false,
_parent: null,
_host: 'us17.api.mailchimp.com',
_readableState: ReadableState {
objectMode: false,
highWaterMark: 16384,
buffer: BufferList { head: null, tail: null, length: 0 },
length: 0,
pipes: [],
flowing: true,
ended: true,
endEmitted: true,
reading: false,
constructed: true,
sync: false,
needReadable: false,
emittedReadable: false,
readableListening: false,
resumeScheduled: false,
errorEmitted: false,
emitClose: false,
autoDestroy: true,
destroyed: true,
errored: null,
closed: true,
closeEmitted: true,
defaultEncoding: 'utf8',
awaitDrainWriters: null,
multiAwaitDrain: false,
readingMore: false,
dataEmitted: true,
decoder: null,
encoding: null,
[Symbol(kPaused)]: false
},
_maxListeners: undefined,
_writableState: WritableState {
objectMode: false,
highWaterMark: 16384,
finalCalled: true,
needDrain: false,
ending: true,
ended: true,
finished: true,
destroyed: true,
decodeStrings: false,
defaultEncoding: 'utf8',
length: 0,
writing: false,
corked: 0,
sync: false,
bufferProcessing: false,
onwrite: [Function: bound onwrite],
writecb: null,
writelen: 0,
afterWriteTickInfo: null,
buffered: [],
bufferedIndex: 0,
allBuffers: true,
allNoop: true,
pendingcb: 0,
constructed: true,
prefinished: true,
errorEmitted: false,
emitClose: false,
autoDestroy: true,
errored: null,
closed: true,
closeEmitted: true,
[Symbol(kOnFinished)]: []
},
allowHalfOpen: false,
_sockname: null,
_pendingData: null,
_pendingEncoding: '',
server: undefined,
_server: null,
ssl: null,
_requestCert: true,
_rejectUnauthorized: true,
parser: null,
_httpMessage: [Circular *3],
write: [Function: writeAfterFIN],
[Symbol(res)]: null,
[Symbol(verified)]: true,
[Symbol(pendingSession)]: null,
[Symbol(async_id_symbol)]: 62,
[Symbol(kHandle)]: null,
[Symbol(lastWriteQueueSize)]: 0,
[Symbol(timeout)]: null,
[Symbol(kBuffer)]: null,
[Symbol(kBufferCb)]: null,
[Symbol(kBufferGen)]: null,
[Symbol(kCapture)]: false,
[Symbol(kSetNoDelay)]: true,
[Symbol(kSetKeepAlive)]: false,
[Symbol(kSetKeepAliveInitialDelay)]: 0,
[Symbol(kBytesRead)]: 554,
[Symbol(kBytesWritten)]: 426,
[Symbol(connect-options)]: {
rejectUnauthorized: true,
ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
checkServerIdentity: [Function: checkServerIdentity],
minDHSize: 1024,
method: 'POST',
port: 443,
path: null,
host: 'us17.api.mailchimp.com',
ca: undefined,
key: undefined,
pfx: undefined,
cert: undefined,
passphrase: undefined,
agent: false,
_defaultAgent: Agent {
_events: [Object: null prototype],
_eventsCount: 2,
_maxListeners: undefined,
defaultPort: 443,
protocol: 'https:',
options: [Object: null prototype],
requests: [Object: null prototype] {},
sockets: [Object: null prototype] {},
freeSockets: [Object: null prototype] {},
keepAliveMsecs: 1000,
keepAlive: false,
maxSockets: Infinity,
maxFreeSockets: 256,
scheduling: 'lifo',
maxTotalSockets: Infinity,
totalSocketCount: 0,
maxCachedSessions: 100,
_sessionCache: [Object],
[Symbol(kCapture)]: false
},
servername: 'us17.api.mailchimp.com',
_agentKey: 'us17.api.mailchimp.com:443:::::::::::::::::::::',
encoding: null,
singleUse: true
},
[Symbol(RequestTimeout)]: undefined
},
_header: 'POST /3.0/lists/3cf661bc52/members HTTP/1.1\r\n' +
'Host: us17.api.mailchimp.com\r\n' +
'Accept-Encoding: gzip, deflate\r\n' +
'User-Agent: node-superagent/3.8.1\r\n' +
'Authorization: Basic dXNlcjoxOTMzNzFiNTc5MGNlZWE2NGIxODk0OGFkYzQ0M2ZlYi11czE3\r\n' +
'Content-Type: application/json\r\n' +
'Accept: application/json\r\n' +
'Content-Length: 105\r\n' +
'Connection: close\r\n' +
'\r\n',
_keepAliveTimeout: 0,
_onPendingData: [Function: nop],
agent: Agent {
_events: [Object: null prototype] {
free: [Function (anonymous)],
newListener: [Function: maybeEnableKeylog]
},
_eventsCount: 2,
_maxListeners: undefined,
defaultPort: 443,
protocol: 'https:',
options: [Object: null prototype] { path: null },
requests: [Object: null prototype] {},
sockets: [Object: null prototype] {},
freeSockets: [Object: null prototype] {},
keepAliveMsecs: 1000,
keepAlive: false,
maxSockets: Infinity,
maxFreeSockets: 256,
scheduling: 'lifo',
maxTotalSockets: Infinity,
totalSocketCount: 0,
maxCachedSessions: 100,
_sessionCache: {
map: {
'us17.api.mailchimp.com:443:::::::::::::::::::::': [Buffer [Uint8Array]]
},
list: [ 'us17.api.mailchimp.com:443:::::::::::::::::::::' ]
},
[Symbol(kCapture)]: false
},
socketPath: undefined,
method: 'POST',
maxHeaderSize: undefined,
insecureHTTPParser: undefined,
path: '/3.0/lists/3cf661bc52/members',
_ended: true,
res: <ref *2> IncomingMessage {
_readableState: ReadableState {
objectMode: false,
highWaterMark: 16384,
buffer: BufferList { head: null, tail: null, length: 0 },
length: 0,
pipes: [],
flowing: false,
ended: true,
endEmitted: true,
reading: false,
constructed: true,
sync: true,
needReadable: false,
emittedReadable: false,
readableListening: false,
resumeScheduled: false,
errorEmitted: false,
emitClose: true,
autoDestroy: true,
destroyed: true,
errored: null,
closed: true,
closeEmitted: true,
defaultEncoding: 'utf8',
awaitDrainWriters: null,
multiAwaitDrain: false,
readingMore: true,
dataEmitted: true,
decoder: null,
encoding: null,
[Symbol(kPaused)]: true
},
_events: [Object: null prototype] {
end: [Function: responseOnEnd],
error: [ [Function], [Function: bound emit] ],
close: [Function: bound emit]
},
_eventsCount: 3,
_maxListeners: undefined,
socket: <ref *1> TLSSocket {
_tlsOptions: {
allowHalfOpen: undefined,
pipe: false,
secureContext: [SecureContext],
isServer: false,
requestCert: true,
rejectUnauthorized: true,
session: undefined,
ALPNProtocols: undefined,
requestOCSP: undefined,
enableTrace: undefined,
pskCallback: undefined,
highWaterMark: undefined,
onread: undefined,
signal: undefined
},
_secureEstablished: true,
_securePending: false,
_newSessionPending: false,
_controlReleased: true,
secureConnecting: false,
_SNICallback: null,
servername: 'us17.api.mailchimp.com',
alpnProtocol: false,
authorized: true,
authorizationError: null,
encrypted: true,
_events: [Object: null prototype] {
close: [Array],
end: [Function: onReadableStreamEnd],
newListener: [Function: keylogNewListener],
secure: [Function: onConnectSecure],
session: [Function (anonymous)],
free: [Function: onFree],
timeout: [Function: onTimeout],
agentRemove: [Function: onRemove],
error: [Function: socketErrorListener]
},
_eventsCount: 9,
connecting: false,
_hadError: false,
_parent: null,
_host: 'us17.api.mailchimp.com',
_readableState: ReadableState {
objectMode: false,
highWaterMark: 16384,
buffer: [BufferList],
length: 0,
pipes: [],
flowing: true,
ended: true,
endEmitted: true,
reading: false,
constructed: true,
sync: false,
needReadable: false,
emittedReadable: false,
readableListening: false,
resumeScheduled: false,
errorEmitted: false,
emitClose: false,
autoDestroy: true,
destroyed: true,
errored: null,
closed: true,
closeEmitted: true,
defaultEncoding: 'utf8',
awaitDrainWriters: null,
multiAwaitDrain: false,
readingMore: false,
dataEmitted: true,
decoder: null,
encoding: null,
[Symbol(kPaused)]: false
},
_maxListeners: undefined,
_writableState: WritableState {
objectMode: false,
highWaterMark: 16384,
finalCalled: true,
needDrain: false,
ending: true,
ended: true,
finished: true,
destroyed: true,
decodeStrings: false,
defaultEncoding: 'utf8',
length: 0,
writing: false,
corked: 0,
sync: false,
bufferProcessing: false,
onwrite: [Function: bound onwrite],
writecb: null,
writelen: 0,
afterWriteTickInfo: null,
buffered: [],
bufferedIndex: 0,
allBuffers: true,
allNoop: true,
pendingcb: 0,
constructed: true,
prefinished: true,
errorEmitted: false,
emitClose: false,
autoDestroy: true,
errored: null,
closed: true,
closeEmitted: true,
[Symbol(kOnFinished)]: []
},
allowHalfOpen: false,
_sockname: null,
_pendingData: null,
_pendingEncoding: '',
server: undefined,
_server: null,
ssl: null,
_requestCert: true,
_rejectUnauthorized: true,
parser: null,
_httpMessage: [Circular *3],
write: [Function: writeAfterFIN],
[Symbol(res)]: null,
[Symbol(verified)]: true,
[Symbol(pendingSession)]: null,
[Symbol(async_id_symbol)]: 62,
[Symbol(kHandle)]: null,
[Symbol(lastWriteQueueSize)]: 0,
[Symbol(timeout)]: null,
[Symbol(kBuffer)]: null,
[Symbol(kBufferCb)]: null,
[Symbol(kBufferGen)]: null,
[Symbol(kCapture)]: false,
[Symbol(kSetNoDelay)]: true,
[Symbol(kSetKeepAlive)]: false,
[Symbol(kSetKeepAliveInitialDelay)]: 0,
[Symbol(kBytesRead)]: 554,
[Symbol(kBytesWritten)]: 426,
[Symbol(connect-options)]: {
rejectUnauthorized: true,
ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
checkServerIdentity: [Function: checkServerIdentity],
minDHSize: 1024,
method: 'POST',
port: 443,
path: null,
host: 'us17.api.mailchimp.com',
ca: undefined,
key: undefined,
pfx: undefined,
cert: undefined,
passphrase: undefined,
agent: false,
_defaultAgent: [Agent],
servername: 'us17.api.mailchimp.com',
_agentKey: 'us17.api.mailchimp.com:443:::::::::::::::::::::',
encoding: null,
singleUse: true
},
[Symbol(RequestTimeout)]: undefined
},
httpVersionMajor: 1,
httpVersionMinor: 1,
httpVersion: '1.1',
complete: true,
rawHeaders: [
'Server',
'openresty',
'Content-Type',
'application/problem+json; charset=utf-8',
'Content-Length',
'167',
'X-Request-Id',
'467e6b59-4147-c76f-83cb-5ae85cf768d0',
'Link',
'<https://us17.api.mailchimp.com/schema/3.0/Definitions/ProblemDetailDocument.json>; rel="describedBy"',
'Content-Encoding',
'gzip',
'Vary',
'Accept-Encoding',
'Date',
'Fri, 19 Aug 2022 08:07:32 GMT',
'Connection',
'close'
],
rawTrailers: [],
aborted: false,
upgrade: false,
url: '',
method: null,
statusCode: 400,
statusMessage: 'Bad Request',
client: <ref *1> TLSSocket {
_tlsOptions: {
allowHalfOpen: undefined,
pipe: false,
secureContext: [SecureContext],
isServer: false,
requestCert: true,
rejectUnauthorized: true,
session: undefined,
ALPNProtocols: undefined,
requestOCSP: undefined,
enableTrace: undefined,
pskCallback: undefined,
highWaterMark: undefined,
onread: undefined,
signal: undefined
},
_secureEstablished: true,
_securePending: false,
_newSessionPending: false,
_controlReleased: true,
secureConnecting: false,
_SNICallback: null,
servername: 'us17.api.mailchimp.com',
alpnProtocol: false,
authorized: true,
authorizationError: null,
encrypted: true,
_events: [Object: null prototype] {
close: [Array],
end: [Function: onReadableStreamEnd],
newListener: [Function: keylogNewListener],
secure: [Function: onConnectSecure],
session: [Function (anonymous)],
free: [Function: onFree],
timeout: [Function: onTimeout],
agentRemove: [Function: onRemove],
error: [Function: socketErrorListener]
},
_eventsCount: 9,
connecting: false,
_hadError: false,
_parent: null,
_host: 'us17.api.mailchimp.com',
_readableState: ReadableState {
objectMode: false,
highWaterMark: 16384,
buffer: [BufferList],
length: 0,
pipes: [],
flowing: true,
ended: true,
endEmitted: true,
reading: false,
constructed: true,
sync: false,
needReadable: false,
emittedReadable: false,
readableListening: false,
resumeScheduled: false,
errorEmitted: false,
emitClose: false,
autoDestroy: true,
destroyed: true,
errored: null,
closed: true,
closeEmitted: true,
defaultEncoding: 'utf8',
awaitDrainWriters: null,
multiAwaitDrain: false,
readingMore: false,
dataEmitted: true,
decoder: null,
encoding: null,
[Symbol(kPaused)]: false
},
_maxListeners: undefined,
_writableState: WritableState {
objectMode: false,
highWaterMark: 16384,
finalCalled: true,
needDrain: false,
ending: true,
ended: true,
finished: true,
destroyed: true,
decodeStrings: false,
defaultEncoding: 'utf8',
length: 0,
writing: false,
corked: 0,
sync: false,
bufferProcessing: false,
onwrite: [Function: bound onwrite],
writecb: null,
writelen: 0,
afterWriteTickInfo: null,
buffered: [],
bufferedIndex: 0,
allBuffers: true,
allNoop: true,
pendingcb: 0,
constructed: true,
prefinished: true,
errorEmitted: false,
emitClose: false,
autoDestroy: true,
errored: null,
closed: true,
closeEmitted: true,
[Symbol(kOnFinished)]: []
},
allowHalfOpen: false,
_sockname: null,
_pendingData: null,
_pendingEncoding: '',
server: undefined,
_server: null,
ssl: null,
_requestCert: true,
_rejectUnauthorized: true,
parser: null,
_httpMessage: [Circular *3],
write: [Function: writeAfterFIN],
[Symbol(res)]: null,
[Symbol(verified)]: true,
[Symbol(pendingSession)]: null,
[Symbol(async_id_symbol)]: 62,
[Symbol(kHandle)]: null,
[Symbol(lastWriteQueueSize)]: 0,
[Symbol(timeout)]: null,
[Symbol(kBuffer)]: null,
[Symbol(kBufferCb)]: null,
[Symbol(kBufferGen)]: null,
[Symbol(kCapture)]: false,
[Symbol(kSetNoDelay)]: true,
[Symbol(kSetKeepAlive)]: false,
[Symbol(kSetKeepAliveInitialDelay)]: 0,
[Symbol(kBytesRead)]: 554,
[Symbol(kBytesWritten)]: 426,
[Symbol(connect-options)]: {
rejectUnauthorized: true,
ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
checkServerIdentity: [Function: checkServerIdentity],
minDHSize: 1024,
method: 'POST',
port: 443,
path: null,
host: 'us17.api.mailchimp.com',
ca: undefined,
key: undefined,
pfx: undefined,
cert: undefined,
passphrase: undefined,
agent: false,
_defaultAgent: [Agent],
servername: 'us17.api.mailchimp.com',
_agentKey: 'us17.api.mailchimp.com:443:::::::::::::::::::::',
encoding: null,
singleUse: true
},
[Symbol(RequestTimeout)]: undefined
},
_consuming: false,
_dumped: false,
req: [Circular *3],
setEncoding: [Function (anonymous)],
on: [Function (anonymous)],
text: '{"title":"Member Exists","status":400,"detail":"123@email.com is already a list member. Use PUT to insert or update list members.","instance":"467e6b59-4147-c76f-83cb-5ae85cf768d0"}',
[Symbol(kCapture)]: false,
[Symbol(kHeaders)]: {
server: 'openresty',
'content-type': 'application/problem+json; charset=utf-8',
'content-length': '167',
'x-request-id': '467e6b59-4147-c76f-83cb-5ae85cf768d0',
link: '<https://us17.api.mailchimp.com/schema/3.0/Definitions/ProblemDetailDocument.json>; rel="describedBy"',
'content-encoding': 'gzip',
vary: 'Accept-Encoding',
date: 'Fri, 19 Aug 2022 08:07:32 GMT',
connection: 'close'
},
[Symbol(kHeadersCount)]: 18,
[Symbol(kTrailers)]: null,
[Symbol(kTrailersCount)]: 0,
[Symbol(RequestTimeout)]: undefined
},
aborted: false,
timeoutCb: null,
upgradeOrConnect: false,
parser: null,
maxHeadersCount: null,
reusedSocket: false,
host: 'us17.api.mailchimp.com',
protocol: 'https:',
[Symbol(kCapture)]: false,
[Symbol(kNeedDrain)]: false,
[Symbol(corked)]: 0,
[Symbol(kOutHeaders)]: [Object: null prototype] {
host: [ 'Host', 'us17.api.mailchimp.com' ],
'accept-encoding': [ 'Accept-Encoding', 'gzip, deflate' ],
'user-agent': [ 'User-Agent', 'node-superagent/3.8.1' ],
authorization: [
'Authorization',
'Basic dXNlcjoxOTMzNzFiNTc5MGNlZWE2NGIxODk0OGFkYzQ0M2ZlYi11czE3'
],
'content-type': [ 'Content-Type', 'application/json' ],
accept: [ 'Accept', 'application/json' ],
'content-length': [ 'Content-Length', 105 ]
}
},
text: '{"title":"Member Exists","status":400,"detail":"123@email.com is already a list member. Use PUT to insert or update list members.","instance":"467e6b59-4147-c76f-83cb-5ae85cf768d0"}',
body: {
title: 'Member Exists',
status: 400,
detail: '123@email.com is already a list member. Use PUT to insert or update list members.',
instance: '467e6b59-4147-c76f-83cb-5ae85cf768d0'
},
files: undefined,
buffered: true,
headers: {
server: 'openresty',
'content-type': 'application/problem+json; charset=utf-8',
'content-length': '167',
'x-request-id': '467e6b59-4147-c76f-83cb-5ae85cf768d0',
link: '<https://us17.api.mailchimp.com/schema/3.0/Definitions/ProblemDetailDocument.json>; rel="describedBy"',
'content-encoding': 'gzip',
vary: 'Accept-Encoding',
date: 'Fri, 19 Aug 2022 08:07:32 GMT',
connection: 'close'
},
header: {
server: 'openresty',
'content-type': 'application/problem+json; charset=utf-8',
'content-length': '167',
'x-request-id': '467e6b59-4147-c76f-83cb-5ae85cf768d0',
link: '<https://us17.api.mailchimp.com/schema/3.0/Definitions/ProblemDetailDocument.json>; rel="describedBy"',
'content-encoding': 'gzip',
vary: 'Accept-Encoding',
date: 'Fri, 19 Aug 2022 08:07:32 GMT',
connection: 'close'
},
statusCode: 400,
status: 400,
statusType: 4,
info: false,
ok: false,
redirect: false,
clientError: true,
serverError: false,
error: Error: cannot POST /3.0/lists/3cf661bc52/members (400)
at Response.toError (/Users/ajzanaalieva/Desktop/Newsletter-Signup/node_modules/superagent/lib/node/response.js:94:15)
at ResponseBase._setStatusProperties (/Users/ajzanaalieva/Desktop/Newsletter-Signup/node_modules/superagent/lib/response-base.js:123:16)
at new Response (/Users/ajzanaalieva/Desktop/Newsletter-Signup/node_modules/superagent/lib/node/response.js:41:8)
at Request._emitResponse (/Users/ajzanaalieva/Desktop/Newsletter-Signup/node_modules/superagent/lib/node/index.js:739:20)
at /Users/ajzanaalieva/Desktop/Newsletter-Signup/node_modules/superagent/lib/node/index.js:903:38
at Stream.<anonymous> (/Users/ajzanaalieva/Desktop/Newsletter-Signup/node_modules/superagent/lib/node/parsers/json.js:19:7)
at Stream.emit (node:events:527:28)
at Unzip.<anonymous> (/Users/ajzanaalieva/Desktop/Newsletter-Signup/node_modules/superagent/lib/node/unzip.js:55:12)
at Unzip.emit (node:events:527:28)
at endReadableNT (node:internal/streams/readable:1345:12) {
status: 400,
text: '{"title":"Member Exists","status":400,"detail":"123@email.com is already a list member. Use PUT to insert or update list members.","instance":"467e6b59-4147-c76f-83cb-5ae85cf768d0"}',
method: 'POST',
path: '/3.0/lists/3cf661bc52/members'
},
accepted: false,
noContent: false,
badRequest: true,
unauthorized: false,
notAcceptable: false,
forbidden: false,
notFound: false,
type: 'application/problem+json',
charset: 'utf-8',
links: {
describedBy: 'https://us17.api.mailchimp.com/schema/3.0/Definitions/ProblemDetailDocument.json'
},
setEncoding: [Function: bound ],
redirects: [],
[Symbol(kCapture)]: false
}
}
